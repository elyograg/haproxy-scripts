#!/bin/bash

if [ -d /opt/quictls/lib64 ]; then
  QUICTLS_LIB=/opt/quictls/lib64
else
  QUICTLS_LIB=/opt/quictls/lib
fi

if [ -z "$1" ]; then
  die "Command needs an argument, the subdirectory with haproxy source"
fi

SCRIPT_DIR="$(cd "$(dirname $0)";pwd -P)"
HAPROXY_SRC_DIR="${SCRIPT_DIR}/$1"
source "${SCRIPT_DIR}/functions.sh"

CPU_COUNT=$(cpu_count)
((MAKE_COUNT=CPU_COUNT/4))
if [ "${MAKE_COUNT}" -lt 2 ]; then
  MAKE_COUNT=2
fi

if [ -e "${HAPROXY_SRC_DIR}" ]; then
  if [ -d "${HAPROXY_SRC_DIR}" ]; then
    cd "${HAPROXY_SRC_DIR}" || die "cd to ${HAPROXY_SRC_DIR} didn't work"
    info "Haproxy repo maintenance"
    sudo make -s clean && > /dev/null
    sudo git pull --rebase
    info "Building haproxy"
    sudo make -s -j${MAKE_COUNT} TARGET=linux-glibc \
      USE_PCRE2_JIT=1 \
      USE_OPENSSL=1 \
      USE_ZLIB=1 \
      USE_SYSTEMD=1 \
      CPU=native \
      USE_QUIC=1 \
      SSL_INC=/opt/quictls/include \
      SSL_LIB=$QUICTLS_LIB \
      LDFLAGS="-Wl,-rpath,$QUICTLS_LIB" \
      DEBUG=" " \

# blank line above intentional
#      DEBUG="-DDEBUG_H3 -DDEBUG_QPACK" \
    RETVAL="$?"
    if [ "$RETVAL" -eq 0 ]; then
      info "Installing haproxy"
      sudo make -s install > /dev/null
      RETVAL="$?"
      if [ "$RETVAL" -ne 0 ]; then
        die "Install failed!"
      fi
      info "Cleaning haproxy repo"
      sudo make -s clean > /dev/null
      info "Restarting haproxy"
      sudo service haproxy restart
    else
      die "Build failed!"
    fi
  else
    die "location (${HAPROXY_SRC_DIR}) is not a directory."
  fi
else
  die "location (${HAPROXY_SRC_DIR}) does not exist."
fi

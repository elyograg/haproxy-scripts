---
variables:
  FF_ENABLE_JOB_CLEANUP: "true"

stages:
  - build_and_deploy
  - test

build_and_deploy:
  stage: build_and_deploy
  script:
    - sudo -E ./fixperms
    - sudo -E rm -rf /tmp/cienv.txt
    - env > /tmp/cienv.txt
    - if [ -f /etc/redhat-release ]; then
        sudo -E yum -y makecache
        sudo -E yum -y install docker
        sudo -E service docker restart
      else
        sudo -E apt-get update -y
        DEBIAN_FRONTEND=noninteractive sudo -E apt-get install -y docker.io
      fi
    - sudo -E ./fixperms
    - TEST_STRING="TEST FILE CONTENTS commit ${CI_COMMIT_SHA}"
    - echo "${TEST_STRING}" > /tmp/test_file
    - docker run -d -p 81:81 -p 443:443/udp --name my_apache_container httpd:latest
    - tar cf ../repo.tar .
    - docker exec my_apache_container mkdir -p ~/git/haproxy-scripts
    - docker cp /tmp/test_file my_apache_container:/usr/local/apache2/htdocs/
    - docker cp ../repo.tar my_apache_container:~/git/haproxy-scripts/
    - docker exec my_apache_container /bin/bash -c "cd ~/git/haproxy-scripts && tar xf repo.tar"
    - docker exec my_apache_container /bin/bash -c "sed -i 's/Listen 80/Listen 81/' /usr/local/apache2/conf/httpd.conf"
    - docker exec my_apache_container /bin/bash -c "sed -i '/<VirtualHost \*:80>/,/<\/VirtualHost>/ s/:80/:81/' /usr/local/apache2/conf/extra/httpd-vhosts.conf"
    - docker exec my_apache_container httpd -k restart
    - docker exec my_apache_container /bin/bash -c "cd ~/git/haproxy-scripts && ./deployci"

test:
  stage: test
  script:
    - FOUND_STRING="$(sudo -E docker run --add-host=host.docker.internal:host-gateway --rm ymuski/curl-http3 curl -m 5 -s -f -k "https://host.docker.internal/test_file" --http3)"
    - echo "PUSHED '${TEST_STRING}'"
    - echo "PULLED '${FOUND_STRING}'"
    - docker rm -f my_apache_container
    - if [ "${TEST_STRING}" != "${FOUND_STRING}" ]; then
        echo "Found string does not match expected string!"
        echo "Something went wrong!"
        exit 1
      fi
